{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\capstone\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // { username, role }\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = userData => {\n    setUser(userData); // { username: \"guru123\", role: \"teacher\" }\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use auth state easily in components\n_s(AuthProvider, \"k19B3VQCOMbqjP9Ul958Nm6p/lo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","login","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/tusha/Desktop/capstone/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // { username, role }\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData); // { username: \"guru123\", role: \"teacher\" }\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use auth state easily in components\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMW,KAAK,GAAIC,QAAQ,IAAK;IAC1BJ,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC;IACnBF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBL,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,IAAI;MAAEE,eAAe;MAAEE,KAAK;MAAEE;IAAO,CAAE;IAAAR,QAAA,EACnEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAb,EAAA,CArBaF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAsBzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACmB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}